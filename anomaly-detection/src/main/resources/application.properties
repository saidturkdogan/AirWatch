server.port=8082
spring.application.name=anomaly-detection

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=anomaly-detection-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=org.airwatch.*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Error Handling - Ignore connection errors
spring.kafka.admin.fail-fast=false
spring.kafka.consumer.properties.allow.auto.create.topics=true
spring.kafka.listener.missing-topics-fatal=false

# TimescaleDB Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/airwatch
spring.datasource.username=postgres
spring.datasource.password=password123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.info.title=Anomaly Detection Service API
springdoc.info.description=API for detecting anomalies in air quality data
springdoc.info.version=1.0.0
